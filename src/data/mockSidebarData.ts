import type { SidebarCollection } from '../types';

/**
 * Dados de exemplo para popular a sidebar estilo Postman
 */
export const mockCollections: SidebarCollection[] = [
  {
    id: 'col-1',
    name: 'Create court',
    description: 'API de gestão de quadras esportivas',
    isExpanded: true,
    folders: [],
    requests: [
      {
        id: 'req-1-1',
        name: 'User login (Success)',
        method: 'POST',
        url: '/api/auth/login',
        collectionId: 'col-1',
      },
      {
        id: 'req-1-2',
        name: 'Create a new court for a tenant (Success)',
        method: 'POST',
        url: '/api/courts',
        collectionId: 'col-1',
      },
      {
        id: 'req-1-3',
        name: 'Find a specific court for the authenticated tenant (Success)',
        method: 'GET',
        url: '/api/courts/:id',
        collectionId: 'col-1',
      },
      {
        id: 'req-1-4',
        name: 'Find all courts for the authenticated tenant (Success)',
        method: 'GET',
        url: '/api/courts',
        collectionId: 'col-1',
      },
    ],
  },
  {
    id: 'col-2',
    name: 'API REST - E-commerce',
    description: 'Endpoints para sistema de e-commerce',
    isExpanded: false,
    folders: [
      {
        id: 'folder-1',
        name: 'Products',
        collectionId: 'col-2',
        isExpanded: false,
        subfolders: [],
        requests: [
          {
            id: 'req-2-1',
            name: 'List Products',
            method: 'GET',
            url: '/api/products',
            collectionId: 'col-2',
            folderId: 'folder-1',
          },
          {
            id: 'req-2-2',
            name: 'Get Product by ID',
            method: 'GET',
            url: '/api/products/:id',
            collectionId: 'col-2',
            folderId: 'folder-1',
          },
          {
            id: 'req-2-3',
            name: 'Create Product',
            method: 'POST',
            url: '/api/products',
            collectionId: 'col-2',
            folderId: 'folder-1',
          },
          {
            id: 'req-2-4',
            name: 'Update Product',
            method: 'PUT',
            url: '/api/products/:id',
            collectionId: 'col-2',
            folderId: 'folder-1',
          },
          {
            id: 'req-2-5',
            name: 'Delete Product',
            method: 'DELETE',
            url: '/api/products/:id',
            collectionId: 'col-2',
            folderId: 'folder-1',
          },
        ],
      },
      {
        id: 'folder-2',
        name: 'Orders',
        collectionId: 'col-2',
        isExpanded: false,
        subfolders: [],
        requests: [
          {
            id: 'req-2-6',
            name: 'List Orders',
            method: 'GET',
            url: '/api/orders',
            collectionId: 'col-2',
            folderId: 'folder-2',
          },
          {
            id: 'req-2-7',
            name: 'Create Order',
            method: 'POST',
            url: '/api/orders',
            collectionId: 'col-2',
            folderId: 'folder-2',
          },
          {
            id: 'req-2-8',
            name: 'Cancel Order',
            method: 'PATCH',
            url: '/api/orders/:id/cancel',
            collectionId: 'col-2',
            folderId: 'folder-2',
          },
        ],
      },
    ],
    requests: [],
  },
  {
    id: 'col-3',
    name: 'Teste de Login API',
    description: 'Testes de autenticação e autorização',
    isExpanded: false,
    folders: [],
    requests: [
      {
        id: 'req-3-1',
        name: 'Login com credenciais válidas',
        method: 'POST',
        url: '/auth/login',
        collectionId: 'col-3',
      },
      {
        id: 'req-3-2',
        name: 'Login com credenciais inválidas',
        method: 'POST',
        url: '/auth/login',
        collectionId: 'col-3',
      },
      {
        id: 'req-3-3',
        name: 'Refresh token',
        method: 'POST',
        url: '/auth/refresh',
        collectionId: 'col-3',
      },
      {
        id: 'req-3-4',
        name: 'Logout',
        method: 'POST',
        url: '/auth/logout',
        collectionId: 'col-3',
      },
    ],
  },
  {
    id: 'col-4',
    name: 'GraphQL API',
    description: 'Queries e Mutations GraphQL',
    isExpanded: false,
    folders: [],
    requests: [
      {
        id: 'req-4-1',
        name: 'Get User Profile',
        method: 'POST',
        url: '/graphql',
        collectionId: 'col-4',
      },
      {
        id: 'req-4-2',
        name: 'Update User Profile',
        method: 'POST',
        url: '/graphql',
        collectionId: 'col-4',
      },
      {
        id: 'req-4-3',
        name: 'List All Posts',
        method: 'POST',
        url: '/graphql',
        collectionId: 'col-4',
      },
    ],
  },
];
